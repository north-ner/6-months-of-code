1. You are given two numbers n and k. You are required to rotate n, k times to the right. If k is positive, rotate to the right i.e. remove rightmost digit and make it leftmost. Do the reverse for negative value of k. Also k can have an absolute value larger than number of digits in n.
2. Take as input n and k.
3. Print the rotated number.
4. Note - Assume that the number of rotations will not cause leading 0's in the result. e.g. such an input will not be given
   n = 12340056
   k = 3
   r = 05612340



import java.util.*;
   
   public class Main{
   
   public static void main(String[] args) {
     // write your code here  
     Scanner scn=new Scanner(System.in);
     
     int n=scn.nextInt();
     int temp=n;
        int counter =0;
        int k=scn.nextInt();
     while(temp>0){
         temp=temp/10;
         counter=counter+1;
     }
    
     
     //to get the k in the range so that it dont throw the erro, since if value of k is huge then 10 pow k will be too great.
     // and since we dont need that much power of k if its exceeding even the size of dizit itself. cause k is the number of 
     //times we need to rotate and if its greater than the dizit then the dizit will be as original. hence this line 23-25 
     // to get value of k in range
     
      k=k%counter;
     if(k<0){
         k=k+counter;
     }


    int div=(int)Math.pow(10,k);
    int rem=n%div;
    n=n/div;
    int mult= (int)Math.pow(10,counter-k);
    int res= rem*mult+n;
    System.out.println(res);
   }}

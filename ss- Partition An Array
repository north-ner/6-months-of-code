1. You are given an array(arr) of integers and a pivot.
2. You have to re-arrange the given array in such a way that all elements smaller or equal to pivot lie on the left side of pivot and all elements greater than pivot lie on its right side.
3. You have to achieve this in linear time.

Note -> For more information, watch question video.


import java.io.*;
import java.util.*;

public class Main {

  public static void partition(int[] arr, int pivot) {
    //write your code here

    //maintaining two regons <= and > region
    //Smaller or equal region ""0 to j-1""" and  greater region"""j to i-1"""
    // i to n-1 is unexplored
    // start from i=0 and j=0
    //t
    // <= will go in the left "=" is for the pivot ;
    // > will go on the right of pivot
    // here j is marking the
    int j = 0;
    int i = 0;
    while (i < arr.length) {
      if (arr[i] <= pivot) {

        //adding unexplored element to "smaller or equal" region
        swap(arr, i, j);
        i++;
        j++;
      }
      else if (arr[i] > pivot) {
        //adding unexplored element to "greater" region
        i++;
      }
    }

  }

  // used for swapping ith and jth elements of array
  public static void swap(int[] arr, int i, int j) {
    System.out.println("Swapping " + arr[i] + " and " + arr[j]);
    int temp = arr[i];
    arr[i] = arr[j];
    arr[j] = temp;
  }

  public static void print(int[] arr) {
    for (int i = 0; i < arr.length; i++) {
      System.out.print(arr[i] + " ");
    }
    System.out.println();
  }

  public static void main(String[] args) throws Exception {
    Scanner scn = new Scanner(System.in);
    int n = scn.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scn.nextInt();
    }
    int pivot = scn.nextInt();
    partition(arr, pivot);
    print(arr);
  }

}
